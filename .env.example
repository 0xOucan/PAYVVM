# ====================================
# PAYVVM Environment Variables
# ====================================
#
# This is the CENTRALIZED environment configuration for the entire project.
#
# SETUP INSTRUCTIONS:
# 1. Copy this file: cp .env.example .env
# 2. Fill in your actual values in the .env file
# 3. Never commit the .env file (it's in .gitignore)
#
# FOR VERCEL DEPLOYMENT:
# Set these variables in the Vercel dashboard (Settings ‚Üí Environment Variables)
# All NEXT_PUBLIC_* variables will be available to your frontend
#
# ====================================

# =============================================================================
# BLOCKCHAIN CONNECTION (Next.js Frontend)
# =============================================================================

# RPC URL for connecting to Ethereum Sepolia
# Option 1: Public RPC (FREE - no API key needed) - RECOMMENDED for testing
NEXT_PUBLIC_RPC_URL=https://rpc.sepolia.org

# Option 2: Alchemy (recommended for production)
# NEXT_PUBLIC_RPC_URL=https://eth-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY

# Option 3: Infura
# NEXT_PUBLIC_RPC_URL=https://sepolia.infura.io/v3/YOUR_INFURA_PROJECT_ID

# Alchemy API Key (optional - for some Scaffold-ETH components)
# Get from: https://dashboard.alchemy.com/
NEXT_PUBLIC_ALCHEMY_API_KEY=

# =============================================================================
# WALLET CONNECTION (Next.js Frontend)
# =============================================================================

# REQUIRED: Reown/WalletConnect Project ID
# Get from: https://cloud.reown.com/
# This is REQUIRED for wallet connection to work
NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID=your_reown_project_id_here

# =============================================================================
# NETWORK CONFIGURATION (Next.js Frontend)
# =============================================================================

# Target Chain ID (11155111 = Ethereum Sepolia)
NEXT_PUBLIC_CHAIN_ID=11155111

# Target Network Name
NEXT_PUBLIC_NETWORK_NAME=sepolia

# =============================================================================
# PAYVVM CONTRACT ADDRESSES (Next.js Frontend)
# =============================================================================
# These are the deployed contract addresses on Ethereum Sepolia
# Public information - safe to commit in code

NEXT_PUBLIC_EVVM_ADDRESS=0x9486f6C9d28ECdd95aba5bfa6188Bbc104d89C3e
NEXT_PUBLIC_NAMESERVICE_ADDRESS=0xa4ba4e9270bDE8FbBF4328925959287a72BA0a55
NEXT_PUBLIC_STAKING_ADDRESS=0x64A47d84dE05B9Efda4F63Fbca2Fc8cEb96E6816
NEXT_PUBLIC_TREASURY_ADDRESS=0x3D6cB29a1F97a2CFf7a48af96F7ED3A02F6aA38E
NEXT_PUBLIC_ESTIMATOR_ADDRESS=0x5dB7cDb7601f9ABCfc5089D66b1A3525471bf2aB

# Principal Token (MATE)
NEXT_PUBLIC_MATE_TOKEN_ADDRESS=0x0000000000000000000000000000000000000001

# EVVM Registry ID
NEXT_PUBLIC_EVVM_ID=1000

# =============================================================================
# ENVIO INDEXER CONFIGURATION
# =============================================================================

# GraphQL Endpoint for Envio Indexer
# Local development (when running Envio indexer locally)
NEXT_PUBLIC_GRAPHQL_ENDPOINT=http://localhost:8080/graphql

# Production (if you deploy Envio to a hosted service)
# NEXT_PUBLIC_GRAPHQL_ENDPOINT=https://your-envio-indexer.com/graphql

# Envio Indexer RPC (for indexer to connect to blockchain)
# Can use the same as NEXT_PUBLIC_RPC_URL or a dedicated one
ENVIO_RPC_URL=https://rpc.sepolia.org

# Envio API Token (OPTIONAL - only needed for hosted indexer deployment)
# Get from: https://envio.dev/app/api-tokens
# Local development: Leave empty (not needed for local indexer)
# Hosted deployment: Required to deploy indexer to Envio's cloud
ENVIO_API_TOKEN=

# Envio Indexer Configuration
# Start block for indexing (deployment block of your contracts)
# PAYVVM contracts deployed at block: 9455841 on Sepolia
# Starting from deployment block is MUCH faster than indexing from genesis
ENVIO_START_BLOCK=9455841

# =============================================================================
# FOUNDRY/FORGE CONFIGURATION (Local Development Only)
# =============================================================================
# These are used for contract deployment and testing
# NOT needed for Vercel deployment

# Ethereum Sepolia Testnet RPC URL
RPC_URL_ETH_SEPOLIA=https://rpc.sepolia.org

# Arbitrum Sepolia Testnet RPC URL
RPC_URL_ARB_SEPOLIA=https://arbitrum-sepolia.therpc.io

# Etherscan API Key (for contract verification)
# Get from: https://etherscan.io/apis
ETHERSCAN_API_KEY=

# Arbiscan API Key (for contract verification on Arbitrum)
# Get from: https://arbiscan.io/apis
ARBISCAN_API_KEY=

# =============================================================================
# APP CONFIGURATION (Optional)
# =============================================================================

# App name for display
NEXT_PUBLIC_APP_NAME=PAYVVM Explorer

# App description
NEXT_PUBLIC_APP_DESCRIPTION=EVVM Name Service and Payment Explorer

# Enable debug mode
NEXT_PUBLIC_DEBUG=false

# =============================================================================
# FISHER BOT CONFIGURATION (Backend Only - NOT for Vercel)
# =============================================================================
# These variables are for running the fisher bot backend service
# DO NOT set these in Vercel - they are for local/server deployment only

# REQUIRED: Private key for fisher wallet (NEVER COMMIT THIS!)
#
# OPTION 1: Regular Fisher Wallet
#   This wallet must:
#   1. Be funded with Sepolia ETH (for gas costs)
#   2. Have MATE tokens staked (to be a valid fisher)
#   3. Be dedicated to fisher operations only
#   Generate a new wallet: cast wallet new
#   Get private key: cast wallet private-key YOUR_WALLET_NAME
#
# OPTION 2: Golden Fisher Wallet (VIP Mode)
#   If you have access to the Golden Fisher private key:
#   1. Be funded with Sepolia ETH (for gas costs)
#   2. Can stake MATE tokens instantly (no signature required)
#   3. Bypasses nonce verification
#   4. Priority transaction processing
#   5. Exclusive golden fisher rewards
#   The bot will automatically detect and activate Golden Fisher mode
#
FISHER_PRIVATE_KEY=0x_your_fisher_wallet_private_key_here

# Enable/disable fisher bot
# Set to "true" to enable, "false" to disable
FISHER_ENABLED=false

# Minimum priority fee to accept (in MATE wei)
# Example: 0 = accept all, 1000000000000000000 = 1 MATE minimum
FISHER_MIN_PRIORITY_FEE=0

# Maximum gas limit per execution
# Default: 500000 (should be sufficient for most payments)
FISHER_GAS_LIMIT=500000

# WebSocket RPC URL for mempool monitoring
# Alchemy WebSocket: wss://eth-sepolia.g.alchemy.com/v2/YOUR_API_KEY
# If not set, will try to derive from NEXT_PUBLIC_RPC_URL
FISHER_WS_URL=

# =============================================================================
# SECURITY NOTES
# =============================================================================
#
# ‚ö†Ô∏è  NEVER COMMIT:
#   - Private keys
#   - Wallet seed phrases
#   - API keys with spending limits
#   - This .env file with real values
#
# ‚úÖ  SAFE TO COMMIT:
#   - This .env.example file (with placeholder values)
#   - Public contract addresses
#   - Public RPC URLs (without API keys)
#   - Chain IDs
#
# üîê  STORE SECURELY:
#   - Private keys ‚Üí Use Foundry keystores (cast wallet import)
#   - API keys ‚Üí Vercel environment variables for production
#   - Local secrets ‚Üí This .env file (gitignored)
#
# =============================================================================

# =============================================================================
# VERCEL DEPLOYMENT CHECKLIST
# =============================================================================
#
# When deploying to Vercel, set these variables in the dashboard:
#
# REQUIRED:
#   ‚úÖ NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID
#
# RECOMMENDED:
#   ‚úÖ NEXT_PUBLIC_RPC_URL (or use default public RPC)
#   ‚úÖ NEXT_PUBLIC_ALCHEMY_API_KEY (if using Alchemy)
#
# OPTIONAL (have defaults in code):
#   - NEXT_PUBLIC_EVVM_ADDRESS (already in code)
#   - NEXT_PUBLIC_NAMESERVICE_ADDRESS (already in code)
#   - NEXT_PUBLIC_CHAIN_ID (already in code)
#   - All other contract addresses (already in code)
#
# =============================================================================
